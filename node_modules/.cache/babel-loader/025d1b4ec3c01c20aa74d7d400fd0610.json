{"ast":null,"code":"var _jsxFileName = \"/Users/ashleydragan/Desktop/SPRINGBOARD/50-capstone-attempts/50-capstone-2-v12/50-capstone-2-v12-frontend/src/profiles/ProfileForm.js\";\nimport React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport ProfileLikes from \"./ProfileLikes\";\nimport QuotableApi from \"../api/api\";\nimport \"./ProfileForm.css\";\nimport UserContext from \"../auth/UserContext\";\nimport { Container, Row, Col } from \"reactstrap\"; // import '../RandomQuote/RandomQuote.css';\n// eslint-disable-next-line\n\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm({\n  id,\n  title,\n  authorName\n}) {\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]); // switch to use our fancy limited-time-display message hook\n\n  const [saveConfirmed, setSaveConfirmed] = useState(false); // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\"QuoteCard\", \"ProfileForm\", \"currentUser=\", currentUser, \"formData=\", formData, \"formErrors=\", formErrors, \"saveConfirmed=\", saveConfirmed);\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password\n    };\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await QuotableApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f,\n      password: \"\"\n    }));\n    setFormErrors([]);\n    setSaveConfirmed(true); // trigger reloading of user information throughout the site\n\n    setCurrentUser(updatedUser);\n  }\n  /** Handle form data changing */\n\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(f => ({ ...f,\n      [name]: value\n    }));\n    setFormErrors([]);\n  } // React.useEffect(function updateLikedStatus() {\n  //   console.debug(\"QuoteCard useEffect updateLikedStatus\", \"id=\", id);\n  //   setisLiked(hasLikedAQuote(id));\n  // }, [id, hasLikedAQuote]);\n  // /** Like a quote */\n  // async function handleLike(evt) {\n  //   if (hasLikedAQuote(id)) return;\n  //   setisLiked(true);\n  //   seeLikedQuote(id);\n  //   console.log(seeLikedQuote)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-col-md-6 col-lg-4 offset-md-3 offset-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    xs: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thoughtBubble-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"username-favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, formData.firstName, \"'s Favorite Quotes\"), /*#__PURE__*/React.createElement(ProfileLikes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"profile-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-form-control-plaintext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, formData.username)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    className: \"profile-form-control\",\n    value: formData.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lastName\",\n    className: \"profile-form-control\",\n    value: formData.lastName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    className: \"profile-form-control\",\n    value: formData.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"Confirm password to make changes:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"profile-form-control\",\n    value: formData.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), formErrors.length ? /*#__PURE__*/React.createElement(Alert, {\n    type: \"danger\",\n    messages: formErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }) : null, saveConfirmed ? /*#__PURE__*/React.createElement(Alert, {\n    type: \"success\",\n    messages: [\"Updated successfully.\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"profile-btn btn-primary btn-block mt-4\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Save Changes\"))))))));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/Users/ashleydragan/Desktop/SPRINGBOARD/50-capstone-attempts/50-capstone-2-v12/50-capstone-2-v12-frontend/src/profiles/ProfileForm.js"],"names":["React","useState","useContext","Alert","ProfileLikes","QuotableApi","UserContext","Container","Row","Col","useTimedMessage","ProfileForm","id","title","authorName","currentUser","setCurrentUser","formData","setFormData","firstName","lastName","email","username","password","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","console","debug","handleSubmit","evt","preventDefault","profileData","updatedUser","saveProfile","errors","f","handleChange","name","value","target","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport ProfileLikes from \"./ProfileLikes\";\nimport QuotableApi from \"../api/api\";\nimport \"./ProfileForm.css\";\nimport UserContext from \"../auth/UserContext\";\nimport { Container, Row, Col } from \"reactstrap\";\n// import '../RandomQuote/RandomQuote.css';\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm({ id, title, authorName }) {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\n      \"QuoteCard\",\n      \"ProfileForm\",\n      \"currentUser=\", currentUser,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n      \"saveConfirmed=\", saveConfirmed,\n  );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await QuotableApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  // React.useEffect(function updateLikedStatus() {\n  //   console.debug(\"QuoteCard useEffect updateLikedStatus\", \"id=\", id);\n  //   setisLiked(hasLikedAQuote(id));\n  // }, [id, hasLikedAQuote]);\n\n  // /** Like a quote */\n  // async function handleLike(evt) {\n  //   if (hasLikedAQuote(id)) return;\n  //   setisLiked(true);\n  //   seeLikedQuote(id);\n  //   console.log(seeLikedQuote)\n  // }\n\n  return (\n      <div className=\"profile-col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n        <Container>\n        <Row xs=\"2\">\n        <Col>\n        <div className=\"thoughtBubble-profile\">\n        {/* <h3 className=\"profile-title\">My Favorite Quotes</h3> */}\n        <h3 className=\"username-favorite\">{formData.firstName}'s Favorite Quotes</h3>\n          <ProfileLikes />\n        </div>\n        </Col>\n        <Col>\n        <div className=\"profile-card\">\n        <h3 className=\"profile-title\">Profile</h3>\n          <div className=\"profile-card-body\">\n            <form>\n              <div className=\"profile-form-group\">\n                <label>Username</label>\n                <p className=\"profile-form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"profile-form-group\">\n                <label>First Name</label>\n                <br/>\n                <input\n                    name=\"firstName\"\n                    className=\"profile-form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"profile-form-group\">\n                <label>Last Name</label>\n                <br/>\n                <input\n                    name=\"lastName\"\n                    className=\"profile-form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"profile-form-group\">\n                <label>Email</label>\n                <br/>\n                <input\n                    name=\"email\"\n                    className=\"profile-form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"profile-form-group\">\n                <label>Confirm password to make changes:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"profile-form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n              </div>\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"profile-btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n        </Col>\n        </Row>\n      </Container>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}