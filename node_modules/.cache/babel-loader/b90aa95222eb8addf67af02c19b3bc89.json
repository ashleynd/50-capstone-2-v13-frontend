{"ast":null,"code":"var _jsxFileName = \"/Users/ashleydragan/Desktop/SPRINGBOARD/50-capstone-2-v13/50-capstone-2-v13-frontend/src/routes-nav/CommunityQuotesRoutes.js\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\nimport CommunityQuoteList from \"../community/CommunityQuoteList\";\nimport NewCommunityQuoteForm from \"../community/NewCommunityQuoteForm\";\nimport CommunityQuote from \"../community/CommunityQuote\";\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      communityquotes: JSON.parse(localStorage.getItem(\"communityquotes\")) || {\n        \"Don't cry because it's over. Smile because it happened. -Dr. Seuss\": \"#FF0000\",\n        \"If anything is worth doing, do it with all your heart. -Buddha\": \"#00FF00\",\n        \"In the end, it's not the years in your life that count. It's the life in your years. --Abraham Lincoln\": \"#0000FF\" // red: \"#FF0000\",\n        // blue: \"#00FF00\",\n        // green: \"#0000FF\"\n\n      }\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd(newCommunityQuote) {\n    this.setState(prevState => ({\n      communityquotes: { ...newCommunityQuote,\n        ...prevState.communityquotes\n      }\n    }), () => {\n      // third param to setState is fn-to-run-when-done\n      localStorage.setItem(\"communityquotes\", JSON.stringify(this.state.communityquotes));\n    });\n  }\n\n  render() {\n    const communityquoteListWithCommunityQuotes = () => /*#__PURE__*/React.createElement(CommunityQuoteList, {\n      communityquotes: this.state.communityquotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 57\n      }\n    });\n\n    const newCommunityQuoteWithHandler = props => /*#__PURE__*/React.createElement(NewCommunityQuoteForm, Object.assign({\n      addCommunityQuote: this.handleAdd\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n\n    const currentCommunityQuote = props => {\n      const communityquoteName = props.match.params.communityquote;\n      const hex = this.state.communityquotes[communityquoteName];\n      return /*#__PURE__*/React.createElement(CommunityQuote, Object.assign({}, props, {\n        hex: hex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      }));\n    };\n\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/communityquotes\",\n      render: communityquoteListWithCommunityQuotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/communityquotes/new\",\n      render: newCommunityQuoteWithHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/communityquotes/:communityquote\",\n      render: currentCommunityQuote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/communityquotes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Routes;","map":{"version":3,"sources":["/Users/ashleydragan/Desktop/SPRINGBOARD/50-capstone-2-v13/50-capstone-2-v13-frontend/src/routes-nav/CommunityQuotesRoutes.js"],"names":["React","Component","Switch","Route","Redirect","BrowserRouter","CommunityQuoteList","NewCommunityQuoteForm","CommunityQuote","Routes","constructor","props","state","communityquotes","JSON","parse","localStorage","getItem","handleAdd","bind","newCommunityQuote","setState","prevState","setItem","stringify","render","communityquoteListWithCommunityQuotes","newCommunityQuoteWithHandler","currentCommunityQuote","communityquoteName","match","params","communityquote","hex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\n\nimport CommunityQuoteList from \"../community/CommunityQuoteList\";\nimport NewCommunityQuoteForm from \"../community/NewCommunityQuoteForm\";\nimport CommunityQuote from \"../community/CommunityQuote\";\n\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      communityquotes: JSON.parse(localStorage.getItem(\"communityquotes\")) || {\n        \"Don't cry because it's over. Smile because it happened. -Dr. Seuss\": \"#FF0000\",\n        \"If anything is worth doing, do it with all your heart. -Buddha\": \"#00FF00\",\n        \"In the end, it's not the years in your life that count. It's the life in your years. --Abraham Lincoln\": \"#0000FF\"\n        // red: \"#FF0000\",\n        // blue: \"#00FF00\",\n        // green: \"#0000FF\"\n      }\n    };\n\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd(newCommunityQuote) {\n    this.setState(prevState => ({\n      communityquotes: { ...newCommunityQuote, ...prevState.communityquotes }\n    }), () => {\n      // third param to setState is fn-to-run-when-done\n      localStorage.setItem(\"communityquotes\", JSON.stringify(this.state.communityquotes))\n    });\n  }\n\n  render() {\n    const communityquoteListWithCommunityQuotes = () => <CommunityQuoteList communityquotes={this.state.communityquotes} />;\n\n    const newCommunityQuoteWithHandler = props => (\n      <NewCommunityQuoteForm addCommunityQuote={this.handleAdd} {...props} />\n    );\n\n    const currentCommunityQuote = props => {\n      const communityquoteName = props.match.params.communityquote;\n      const hex = this.state.communityquotes[communityquoteName];\n      return <CommunityQuote {...props} hex={hex} />;\n    };\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/communityquotes\" render={communityquoteListWithCommunityQuotes} />\n          <Route exact path=\"/communityquotes/new\" render={newCommunityQuoteWithHandler} />\n          <Route path=\"/communityquotes/:communityquote\" render={currentCommunityQuote} />\n          <Redirect to=\"/communityquotes\" />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}