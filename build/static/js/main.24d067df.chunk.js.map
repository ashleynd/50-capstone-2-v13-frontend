{"version":3,"sources":["common/spinner.gif","about/headshot.png","hooks/useLocalStorage.js","auth/UserContext.js","routes-nav/Navigation.js","hooks/useFetch.js","common/LoadingSpinner.js","mainquotelist/MainQuoteList.js","homepage/Homepage.js","common/SearchForm.js","api/api.js","authors/AuthorCard.js","authors/AuthorList.js","quotes/QuoteCard.js","quotes/QuoteCardList.js","quotes/QuoteList.js","authors/AuthorDetail.js","common/Alert.js","auth/LoginForm.js","profiles/ProfileLikes.js","profiles/ProfileForm.js","auth/SignupForm.js","routes-nav/PrivateRoute.js","community/CommunityQuoteList.js","community/NewCommunityQuoteForm.js","community/CommunityQuote.js","routes-nav/CommunityQuotesRoutes.js","QOTD/QuoteOfTheDay.js","about/About.js","routes-nav/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","useState","item","setItem","useEffect","removeItem","UserContext","React","createContext","Navigation","logout","currentUser","useContext","className","to","role","aria-label","onClick","first_name","username","useFetch","url","response","setResponse","error","setError","isLoading","setIsLoading","a","fetch","res","json","fetchData","LoadingSpinner","src","spinner","alt","width","MainQuoteList","id","title","authorName","data","Container","Row","Col","Homepage","firstName","style","display","flexWrap","SearchForm","searchFor","searchTerm","setSearchTerm","onSubmit","evt","preventDefault","trim","undefined","name","placeholder","value","onChange","target","type","BASE_URL","process","QuotableApi","endpoint","method","headers","Authorization","token","params","axios","console","message","Array","isArray","this","request","user","authors","handle","author","quotes","userLikes","AuthorCard","description","logoUrl","AuthorList","setAuthors","search","getAuthors","length","map","c","QuoteCard","hasLikedAQuote","LikedQuote","isLiked","setisLiked","QuoteCardList","quote","salary","equity","QuoteList","setQuotes","getQuotes","AuthorDetail","useParams","setAuthor","getAuthor","Alert","messages","LoginForm","login","history","useHistory","password","formData","setFormData","formErrors","setFormErrors","handleSubmit","result","success","push","errors","handleChange","l","autoComplete","required","ProfileLikes","likedquotes","seeLike","getLikedQuote","x","old","likedquote","ProfileForm","setCurrentUser","lastName","email","saveConfirmed","setSaveConfirmed","profileData","saveProfile","updatedUser","f","xs","SignupForm","signup","PrivateRoute","exact","path","children","CommunityQuoteList","communityquoteLinks","Object","keys","props","communityquotes","communityquoteName","textDecoration","communityquote","padding","Component","NewCommunityQuoteForm","state","hex","bind","e","setState","addCommunityQuote","htmlFor","readOnly","linkStyle","color","CommunityQuote","chars_left","max_chars","match","Routes","JSON","parse","handleAdd","newCommunityQuote","prevState","stringify","render","QuoteOfTheDay","contents","quoteOfTheDay","date","source","permalink","action","About","headshot","CommunityQuotesRoutes","App","infoLoaded","setInfoLoaded","Set","likeIds","setLikeIds","setToken","signupData","loginData","has","jwt","decode","getCurrentUser","likes","Provider","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.24d067df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8d2cd246.gif\";","module.exports = __webpack_public_path__ + \"static/media/headshot.d13fce44.png\";","import { useState, useEffect } from \"react\";\n\n/** Custom hook for keeping state data synced with localStorage.\n *\n * This creates `item` as state and look in localStorage for current value\n * (if not found, defaults to `firstValue`)\n *\n * When `item` changes, effect re-runs:\n * - if new state is null, removes from localStorage\n * - else, updates localStorage\n *\n * To the component, this just acts like state that is also synced to/from\n * localStorage::\n *\n *   const [myThing, setMyThing] = useLocalStorage(\"myThing\")\n */\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    // console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./Navigation.css\";\n\n/** Navigation bar for site. Shows up on every page.\n *\n * When user is logged in, shows links to main areas of site. When not,\n * shows link to Login and Signup forms.\n *\n * Rendered by App.\n */\n\nfunction Navigation({ logout }) {\n  const { currentUser } = useContext(UserContext);\n  // console.debug(\"Navigation\", \"currentUser=\", currentUser);\n\n  function loggedInNav() {\n    return (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link-logged-in\" to=\"/famousquotes\">\n              Famous Quotes\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link-logged-in\" to=\"/famousauthors\">\n              Famous Authors\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link-logged-in\" to=\"/quoteoftheday\">\n              Quote of the Day\n            </NavLink>\n          </li>\n          {/* <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/quotelist\">\n              Quote List\n            </NavLink>\n          </li> */}\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link-logged-in\" to=\"/communityquotes\">\n              Community Quotes\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link-logged-in\" to=\"/profile\">\n              Profile\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link-logged-in\" to=\"/about\">\n              About\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link-logged-in\" to=\"/\" onClick={logout}>\n            <span role=\"img\" aria-label=\"arrow\">⬅️</span>Log out {currentUser.first_name || currentUser.username}\n            </Link>\n          </li>\n        </ul>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item-logged-out\">\n            <NavLink className=\"nav-link\" to=\"/quoteoftheday\">\n              Quote of The Day\n            </NavLink>\n          </li>\n          <li className=\"nav-item-logged-out\">\n            <NavLink className=\"nav-link\" to=\"/about\">\n              About\n            </NavLink>\n          </li>\n          {/* <li className=\"nav-item-logged-out\">\n            <NavLink className=\"nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n          <li className=\"nav-item-logged-out\">\n            <NavLink className=\"nav-link\" to=\"/signup\">\n              Sign Up\n            </NavLink>\n          </li> */}\n        </ul>\n    );\n  }\n\n  return (\n      <nav className=\"Navigation navbar navbar-expand-md\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <span role=\"img\" aria-label=\"cloud\">💭</span>Quotable\n        </Link>\n        {currentUser ? loggedInNav() : loggedOutNav()}\n      </nav>\n  );\n}\n\nexport default Navigation;\n","import { useEffect, useState } from \"react\";\n\nconst useFetch = (url, options = {}) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // after the first render, fetch our data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [url]);\n\n  return { response, error, isLoading };\n};\n\nexport default useFetch;\n","import React from \"react\";\nimport \"./LoadingSpinner.css\";\nimport spinner from './spinner.gif';\n\n/** Loading message used by components that fetch API data. */\n\nfunction LoadingSpinner() {\n  return (\n      <div className=\"LoadingSpinner\">\n        {/* Loading ... */}\n        <img src={spinner} alt=\"spinner\" width=\"150px\"></img>\n      </div>\n  );\n}\n\nexport default LoadingSpinner;","// import React, { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport { Container, Row, Col } from \"reactstrap\";\n// import LikeButton from \"./LikeButton\";\n// import QuotableApi from \"../api/api\";\n// import QuoteCardList from \"../quotes/QuoteCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport './MainQuoteList.css';\n\nconst MainQuoteList = ({ id, title, authorName }) => {\n  // const data = useFetch(\"https://goquotes-api.herokuapp.com/api/v1/random?count=101\");\n  const data = useFetch(\"https://quotable.io/quotes?page=1\");\n  if (data.isLoading) {\n    // return <div>Loading...</div>;\n    return <div className=\"loading\"><LoadingSpinner /></div>;\n  }\n  if (data.error) {\n    return <div>Sorry, something went wrong :(</div>\n    }\n\n  // const quote = data.response;\n  // console.log(quote)\n  // console.log(quote.results[0].content);\n  // console.log(quote.results[0].author);\n  // console.log(quote.results[1].content);\n  // console.log(quote.results[1].author);\n\n  \n  // console.log(quote.quotes)\n  // const quotezero = quote.results[0].content;\n  // const authorzero = quote.results[0].author;\n  // const quoteone = quote.results[1].content;\n  // const authorone = quote.results[1].author;\n  // const quotetwo = quote.results[2].content;\n  // const authortwo = quote.results[2].author;\n  // const quotethree = quote.results[3].content;\n  // const authorthree = quote.results[3].author;\n  // const quotefour = quote.results[4].content;\n  // const authorfour = quote.results[4].author;\n  // const quotefive = quote.results[5].content;\n  // const authorfive = quote.results[5].author;\n  // const quotesix = quote.results[6].content;\n  // const authorsix = quote.results[6].author;\n  // const quoteseven = quote.results[7].content;\n  // const authorseven = quote.results[7].author;\n  // const quoteeight = quote.results[8].content;\n  // const authoreight = quote.results[8].author;\n  // const quotenine = quote.results[9].content;\n  // const authornine = quote.results[9].author;\n  // const quoteten = quote.results[10].content;\n  // const authorten = quote.results[10].author;\n  // const quoteeleven = quote.results[11].content;\n  // const authoreleven = quote.results[11].author;\n  // const quotetwelve = quote.results[12].content;\n  // const authortwelve = quote.results[12].author;\n  // const quotethirteen = quote.results[13].content;\n  // const authorthirteen = quote.results[13].author;\n  // const quotefourteen = quote.results[14].content;\n  // const authorfourteen = quote.results[14].author;\n  // const quotefifteen = quote.results[15].content;\n  // const authorfifteen = quote.results[15].author;\n  // const quotesixteen = quote.results[16].content;\n  // const authorsixteen = quote.results[16].author;\n  // const quoteseventeen = quote.results[17].content;\n  // const authorseventeen = quote.results[17].author;\n  // const quoteeighteen = quote.results[18].content;\n  // const authoreighteen = quote.results[18].author;\n  // const quotesnineteen = quote.results[19].content;\n  // const authorsnineteen = quote.results[19].author;\n\n\n  \n  // return (\n  //   // <div className=\"card-list\" style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n  //   <div className=\"card-list\">\n  //     <Container>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotezero}\"</p>\n  //       <p><small>--{authorzero}</small></p>\n  //     </div>\n  //       </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteone}\"</p>\n  //       <p><small>--{authorone}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotetwo}\"</p>\n  //       <p><small>--{authortwo}</small></p>\n  //     </div>\n  //     </Col>\n  //     </Row>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotethree}\"</p>\n  //       <p><small>--{authorthree}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotefour}\"</p>\n  //       <p><small>--{authorfour}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotefive}\"</p>\n  //       <p><small>--{authorfive}</small></p>\n  //     </div>\n  //     </Col>\n  //     </Row>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotesix}\"</p>\n  //       <p><small>--{authorsix}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteseven}\"</p>\n  //       <p><small>--{authorseven}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteeight}\"</p>\n  //       <p><small>--{authoreight}</small></p>\n  //     </div>\n  //     </Col>\n  //     </Row>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotenine}\"</p>\n  //       <p><small>--{authornine}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteten}\"</p>\n  //       <p><small>--{authorten}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteeleven}\"</p>\n  //       <p><small>--{authoreleven}</small></p>\n  //     </div>\n  //     </Col>\n  //     </Row>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotetwelve}\"</p>\n  //       <p><small>--{authortwelve}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotethirteen}\"</p>\n  //       <p><small>--{authorthirteen}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotefourteen}\"</p>\n  //       <p><small>--{authorfourteen}</small></p>\n  //     </div>\n  //     </Col>\n  //     </Row>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotefifteen}\"</p>\n  //       <p><small>--{authorfifteen}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotesixteen}\"</p>\n  //       <p><small>--{authorsixteen}</small></p>\n  //     </div>\n  //     </Col>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteseventeen}\"</p>\n  //       <p><small>--{authorseventeen}</small></p>\n  //     </div>\n  //     </Col>\n  //     </Row>\n  //     <Row>\n  //       <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quoteeighteen}\"</p>\n  //       <p><small>--{authoreighteen}</small></p>\n  //     </div>\n  //     </Col>\n  //       {/* <Col>\n  //     <div className=\"thoughtBubble2\">\n  //       <p>\"{quotesnineteen}\"</p>\n  //       <p><small>--{authorsnineteen}</small></p>\n  //     </div>\n  //     </Col> */}\n  //     </Row>\n  //     </Container>\n  //     </div>\n  // );\n\n  return (\n    // <div className=\"card-list\" style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    <div className=\"card-list\">\n      <Container>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"There is still a lot to learn and there is always great stuff out there. Even mistakes can be wonderful.\"</p>\n        <p><small>--Robin Williams</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"I think it is possible for ordinary people to choose to be extraordinary.\"</p>\n        <p><small>--Elon Musk</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Life is pretty simple: You do some stuff. Most fails. Some works. You do more of what works.\"</p>\n        <p><small>--Leonardo Da Vinci</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Be yourself; everyone else is already taken.\"</p>\n        <p><small>--Oscar Wilde</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If I had asked people what they wanted, they would have said faster horses.\"</p>\n        <p><small>--Henry Ford</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"The best way to predict your future is to create it.\"</p>\n        <p><small>--Abraham Lincoln</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Mistakes are always forgivable, if one has the courage to admit them.\"</p>\n        <p><small>--Bruce Lee</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If a man hasn't discovered something he will die for, he isn''t fit to live.\"</p>\n        <p><small>--Martin Luther King Jr.</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"I don't think of all the misery, but of the beauty that still remains.\"</p>\n        <p><small>--Anne Frank</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Courage is found in unlikely places.\"</p>\n        <p><small>--J.R.R. Tolkien</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Pride costs us more than hunger, thirst, and cold.\"</p>\n        <p><small>--Thomas Jefferson</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Never make someone a priority when all you are to them is an option.\"</p>\n        <p><small>--Maya Angelou</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"And I like large parties. They’re so intimate. At small parties there isn’t any privacy.\"</p>\n        <p><small>--F. Scott Fitzgerald</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Don't worry about a thing, every little thing is gonna be alright.\"</p>\n        <p><small>--Bob Marley</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"No matter what anybody tells you, words and ideas can change the world.\"</p>\n        <p><small>--Robin Williams</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"When I thought I couldn’t go on, I forced myself to keep going. My success is based on persistence, not luck.\"</p>\n        <p><small>--Estée Lauder</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Count your age by friends, not years. Count your life by smiles, not tears.\"</p>\n        <p><small>--John Lennon</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If we really want to love, we must learn how to forgive.\"</p>\n        <p><small>--Mother Teresa</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Everyone has oceans to fly, if they have the heart to do it. Is it reckless? Maybe. But what do dreams know of boundaries?\"</p>\n        <p><small>--Amelia Earhart</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"It is better to light a candle than curse the darkness.\"</p>\n        <p><small>--Eleanor Roosevelt</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"When angry, count ten, before you speak; if very angry, a hundred.\"</p>\n        <p><small>--Thomas Jefferson</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Life’s too short to hang out with people who aren’t resourceful.\"</p>\n        <p><small>--Jeff Bezos</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"As you grow older you will discover that you have two hands. One for helping yourself, the other for helping others.\"</p>\n        <p><small>--Audrey Hepburn</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Laughter is America’s most important export.\"</p>\n        <p><small>--Walt Disney</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"You never know when a moment and a few sincere words can have an impact on a life.\"</p>\n        <p><small>--Zig Ziglar</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Vision without execution is just hallucination.\"</p>\n        <p><small>--Henry Ford</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Put blinders on to those things that conspire to hold you back, especially the ones in your own head.\"</p>\n        <p><small>--Meryl Streep</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"No one has ever become poor by giving.\"</p>\n        <p><small>--Anne Frank</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Money and success don''t change people; they merely amplify what is already there.\"</p>\n        <p><small>--Will Smith</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"To build may have to be the slow and laborious task of years. To destroy can be the thoughtless act of a single day.\"</p>\n        <p><small>--Winston Churchill</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Who you are is always right.\"</p>\n        <p><small>--Ming Dao Deng</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"A question that sometimes drives me hazy — am I or are the others crazy?\"</p>\n        <p><small>--Albert Einstein</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If you take responsibility for yourself you will develop a hunger to accomplish your dream.\"</p>\n        <p><small>--Les Brown</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Love is like the wind, you can''t see it but you can feel it.\"</p>\n        <p><small>--Nicholas Sparks</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Don’t throw stones at your neighbors, if your own windows are glass.\"</p>\n        <p><small>--Benjamin Franklin</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Everything has beauty, but not everyone sees it.\"</p>\n        <p><small>--Confucius</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"The heart wants what it wants. There''s no logic.\"</p>\n        <p><small>--Woody Allen</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"There can be no greater gift than that of giving one''s time and energy to help others without expecting anything in return.\"</p>\n        <p><small>--Nelson Mandela</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"I think everybody should get rich and famous and do everything they ever dreamed of so they can see that it’s not the answer.\"</p>\n        <p><small>--James Carrey</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If you only knew the magnificence of the 3, 6, and 9, then you would have a key to the universe.\"</p>\n        <p><small>--Nikola Tesla</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"It is better to change an opinion than to persist in a wrong one.\"</p>\n        <p><small>--Socrates</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If you spend too much time thinking about a thing, you’ll never get it done. Make at least one definite move daily toward your goal.\"</p>\n        <p><small>--Bruce Lee</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Friendships between women, as any woman will tell you, are built of a thousand small kindnesses... swapped back and forth and over again.\"</p>\n        <p><small>--Michelle Obama</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"One of the only ways to get out of a tight box is to invent your way out.\"</p>\n        <p><small>--Jeff Bezos</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Get busy living or get busy dying.\"</p>\n        <p><small>--Steve Jobs</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"It is better to be alone than in bad company.\"</p>\n        <p><small>--George Washington</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"If you tell the truth, you don''t have to remember anything.\"</p>\n        <p><small>--Mark Twain</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Be clearly aware of the stars and infinity on high. Then life seems almost enchanted after all.\"</p>\n        <p><small>--Vincent Van Gogh</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Radiate boundless love towards the entire world.\"</p>\n        <p><small>--Buddha</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Saying nothing sometimes says the most.\"</p>\n        <p><small>--Emily Dickinson</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Pleasure in the job puts perfection in the work.'\"</p>\n        <p><small>--Aristotle</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Sometimes you just have to throw on a crown and remind them who they’re dealing with.\"</p>\n        <p><small>--Marilyn Monroe</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"A crisis is an opportunity riding the dangerous wind.\"</p>\n        <p><small>--Chinese Proverb</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"There is nothing so stable as change.\"</p>\n        <p><small>--Bob Dylan</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"There are no secrets to success. It is the result of preparation, hard work, and learning from failure.\"</p>\n        <p><small>--Colin Powell</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Football is like life – it requires perseverance, self-denial, hard work, sacrifice, dedication and respect for authority.\"</p>\n        <p><small>--Vince Lombardi</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Listen. I wish I could tell you it gets better. But, it doesn’t get better. You get better.\"</p>\n        <p><small>--Joan Rivers</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Never settle for the crumbs of life.\"</p>\n        <p><small>--Og Mandino</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Your world is a living expression of how you are using and have used your mind.\"</p>\n        <p><small>--Earl Nightingale</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Well-behaved women seldom make history.\"</p>\n        <p><small>--Laurel Thatcher Ulrich</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"The foolish reject what they see, not what they think; the wise reject what they think, not what they see.\"</p>\n        <p><small>--Huang Po</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Why do you stay in prison when the door is so wide open?\"</p>\n        <p><small>--Rumi</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"The best way to find yourself is to lose yourself in the service of others.\"</p>\n        <p><small>--Gandhi</small></p>\n      </div>\n      </Col>\n      </Row>\n      <Row>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Why live an ordinary life, when you can live an extraordinary one.\"</p>\n        <p><small>--Tony Robbins</small></p>\n      </div>\n        </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"The only place where success comes before work is in the dictionary.\"</p>\n        <p><small>--Vidal Sassoon</small></p>\n      </div>\n      </Col>\n        <Col>\n      <div className=\"thoughtBubble2\">\n        <p>\"Whatever happens always happens on time.\"</p>\n        <p><small>--Zen Proverb</small></p>\n      </div>\n      </Col>\n      </Row>\n      </Container>\n      </div>\n  );\n  \n};\n\nexport default MainQuoteList;","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Homepage.css\";\nimport UserContext from \"../auth/UserContext\";\n// import RandomQuote from \"../RandomQuote/RandomQuote\";\nimport MainQuoteList from \"../mainquotelist/MainQuoteList\";\n// import MainQuoteList2 from \"../mainquotelist/MainQuoteList2\";\n\n/** Homepage of site.\n *\n * Shows welcome message or login/register buttons.\n *\n * Routed at /\n *\n * Routes -> Homepage\n */\n\nfunction Homepage() {\n  const { currentUser } = useContext(UserContext);\n  // console.debug(\"Homepage\", \"currentUser=\", currentUser);\n\n  return (\n      <div className=\"App\">\n        <div className=\"container text-center\">\n          <h1 className=\"headline\"><span role=\"img\" aria-label=\"cloud\">💭</span>Quotable</h1>\n          {/* <p className=\"lead\">Browse quotes from popular authors.</p> */}\n          <p className=\"lead\">Login to browse or favorite more famous quotes from over 100 authors, or post your own quotes.</p>\n          {currentUser\n              ? <h2>\n                <span role=\"img\" aria-label=\"handwave\">👋🏻</span>Welcome, {currentUser.firstName || currentUser.username}!\n                {/* <RandomQuote /> */}\n              </h2>\n              : (\n                <p>\n                    <Link className=\"home-btn\"\n                          to=\"/login\">\n                      Log in\n                    </Link>\n                    <Link className=\"home-btn\"\n                          to=\"/signup\">\n                      Sign up\n                    </Link>\n                  </p>\n              )}\n              <div className=\"listofquotes\" style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <MainQuoteList />\n              </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Homepage;\n","import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\n\n/** Search widget.\n *\n * Appears on AuthorList and QuoteList so that these can be filtered\n * down.\n *\n * This component doesn't *do* the searching, but it renders the search\n * form and calls the `searchFor` function prop that runs in a parent to do the\n * searching.\n *\n * { AuthorList, QuoteList } -> SearchForm\n */\n\nfunction SearchForm({ searchFor }) {\n  // console.debug(\"SearchForm\", \"searchFor=\", typeof searchFor);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  /** Tell parent to filter */\n  function handleSubmit(evt) {\n    // take care of accidentally trying to search for just spaces\n    evt.preventDefault();\n    searchFor(searchTerm.trim() || undefined);\n    setSearchTerm(searchTerm.trim());\n  }\n\n  /** Update form fields */\n  function handleChange(evt) {\n    setSearchTerm(evt.target.value);\n  }\n\n  return (\n      <div className=\"SearchForm mb-4\">\n        <form className=\"form-inline\" onSubmit={handleSubmit}>\n          <input\n              className=\"form-control form-control-lg flex-grow-1\"\n              name=\"searchTerm\"\n              placeholder=\"Enter search term...💭\"\n              value={searchTerm}\n              onChange={handleChange}\n          />\n          <button type=\"submit\" className=\"btn btn-lg btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n  );\n}\n\nexport default SearchForm;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass QuotableApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${QuotableApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get the current user. */\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get authors (filtered by name if not undefined) */\n\n  static async getAuthors(name) {\n    let res = await this.request(\"authors\", { name });\n    return res.authors;\n  }\n\n  /** Get details on a author by handle. */\n\n  static async getAuthor(handle) {\n    let res = await this.request(`authors/${handle}`);\n    return res.author;\n  }\n\n  /** Get list of quotes (filtered by title if not undefined) */\n\n  static async getQuotes(title) {\n    let res = await this.request(\"quotes\", { title });\n    return res.quotes;\n  }\n\n  /** Like a quote */\n\n  static async LikedQuote(username, id) {\n    await this.request(`users/${username}/quotes/${id}`, {}, \"post\");\n  }\n\n  /** Return a liked quote */\n  // http://localhost:3001/users/testuser200/likedquotes\n  // static async seeLikedQuotes(username) {\n  //   let res = await this.request(`users/${username}/likedquotes`, {}, \"get\");\n  //   return res.username;\n  // }\n  static async getLikedQuote(username) {\n    // let res = await this.request(`users/${username}/likedquotes`, {}, \"get\");\n    let res = await this.request(`users/${username}/likedquotes`, { username });\n    return res.userLikes;\n  }\n\n  /** Get token for login from username, password. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup for site. */\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /** Save user profile page. */\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\n\n\nexport default QuotableApi;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./AuthorCard.css\";\n\n/** Show limited information about a author\n *\n * Is rendered by AuthorList to show a \"card\" for each author.\n *\n * AuthorList -> AuthorCard\n */\n\nfunction AuthorCard({ name, description, logoUrl, handle }) {\n  // console.debug(\"AuthorCard\");\n\n  return (\n      <Link className=\"AuthorCard-authors card\" to={`/authors/${handle}`}>\n        <div className=\"card-body-authors\">\n          <h6 className=\"card-title-authors\">\n            {name}\n            {/* {logoUrl && <img src={logoUrl}\n                             alt={name}\n                             className=\"float-right ml-5\" />} */}\n          </h6>\n          <p><small>{description}</small></p>\n        </div>\n      </Link>\n  );\n}\n\nexport default AuthorCard;\n","import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport QuotableApi from \"../api/api\";\nimport AuthorCard from \"./AuthorCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport './AuthorList.css';\n\n/** Show page with list of authors.\n *\n * On mount, loads authors from API.\n * Re-loads filtered authors on submit from search form.\n *\n * This is routed to at /authors\n *\n * Routes -> { AuthorCard, SearchForm }\n */\n\nfunction AuthorList() {\n  // console.debug(\"AuthorList\");\n\n  const [authors, setAuthors] = useState(null);\n\n  useEffect(function getAuthorsOnMount() {\n    // console.debug(\"AuthorList useEffect getAuthorsOnMount\");\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads authors. */\n  async function search(name) {\n    let authors = await QuotableApi.getAuthors(name);\n    setAuthors(authors);\n  }\n\n  if (!authors) return <LoadingSpinner />;\n\n  return (\n      <div className=\"AuthorList col-md-8 offset-md-2\">\n        <SearchForm searchFor={search} />\n        <div>\n\n        {authors.length\n            ? (\n                <div className=\"AuthorList-list\">\n                  {authors.map(c => (\n                      <AuthorCard\n                          key={c.handle}\n                          handle={c.handle}\n                          name={c.name}\n                          description={c.description}\n                          logoUrl={c.logoUrl}\n                      />\n                  ))}\n                </div>\n            ) : (\n                <p className=\"lead\">Sorry, no results were found!</p>\n            )}\n        </div>\n      </div>\n  );\n}\n\nexport default AuthorList;\n","import React, { useContext, useState } from \"react\";\n// import { Container, Row, Col } from \"reactstrap\";\nimport \"./QuoteCard.css\";\n// import \"./QuoteList.css\";\nimport \"./LikeButton.css\";\nimport UserContext from \"../auth/UserContext\";\n\n/** Show limited information about a quote.\n *\n * Is rendered by QuoteCardList to show a \"card\" for each quote.\n *\n * Receives like func prop from parent, which is called on like.\n *\n * QuoteCardList -> QuoteCard\n */\n\n\nfunction QuoteCard({ id, title, authorName }) {\n  // console.debug(\"QuoteCard\");\n\n\n  const { hasLikedAQuote, LikedQuote } = useContext(UserContext);\n  const [isLiked, setisLiked] = useState(true);\n\n  React.useEffect(function updateLikedStatus() {\n    // console.debug(\"QuoteCard useEffect updateLikedStatus\", \"id=\", id);\n    setisLiked(hasLikedAQuote(id));\n  }, [id, hasLikedAQuote]);\n\n  /** Like a quote */\n  async function handleLike(evt) {\n    if (hasLikedAQuote(id)) return;\n    LikedQuote(id);\n    setisLiked(true);\n  }\n\n\n\n  return (\n    <div className=\"author-card-list\">\n       {/* <Container>\n         <Row xs=\"4\">\n          <Col> */}\n      <div className=\"author-card\"> {isLiked}\n          <h6 className=\"quote-txt\">\"{title}\"</h6>\n          <p><small>{authorName}</small></p>\n          <button className={isLiked ? 'Mode-like' : 'Mode-unlike'} onClick={handleLike}>{isLiked ? \"Added to Favorites ✅\" : \"Add to Favorites ❤️\"}</button>\n        </div>\n          {/* </Col>\n          </Row>\n          </Container> */}\n        </div>\n  );\n}\n\n\n\nexport default QuoteCard;\n\n","import React from \"react\";\n// import { Container, Row, Col } from \"reactstrap\";\nimport QuoteCard from \"./QuoteCard\";\nimport \"./QuoteCardList.css\";\n\n/** Show list of quote cards.\n *\n * Used by both QuoteList and AuthorDetail to list quotes. Receives a like\n * func prop which will be called by QuoteCard on like.\n *\n * QuoteList -> QuoteCardList -> QuoteCard\n * AuthorDetail -> QuoteCardList -> QuoteCard\n *\n */\n\nfunction QuoteCardList({ quotes, isLiked }) {\n  // console.debug(\"QuoteCardList\", \"quotes=\", quotes);\n\n  return (\n      <div className=\"QuoteCardList\">\n        {quotes.map(quote => (\n            <QuoteCard\n                key={quote.id}\n                id={quote.id}\n                title={quote.title}\n                salary={quote.salary}\n                equity={quote.equity}\n                authorName={quote.authorName}\n            />\n            ))}\n      </div>\n  );\n}\n\nexport default QuoteCardList;\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"../common/SearchForm\";\nimport QuotableApi from \"../api/api\";\nimport QuoteCardList from \"./QuoteCardList\";\nimport \"./QuoteCard.css\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Show page with list of quotes.\n *\n * On mount, loads quotes from API.\n * Re-loads filtered quotes on submit from search form.\n *\n * QuoteList -> QuoteCardList -> QuoteCard\n *\n * This is routed to at /quotes\n */\n\nfunction QuoteList() {\n  // console.debug(\"QuoteList\");\n\n  const [quotes, setQuotes] = useState(null);\n\n  useEffect(function getAllQuotesOnMount() {\n    // console.debug(\"QuoteList useEffect getAllQuotesOnMount\");\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads quotes. */\n  async function search(title) {\n    let quotes = await QuotableApi.getQuotes(title);\n    setQuotes(quotes);\n  }\n\n  if (!quotes) return <LoadingSpinner />;\n\n  return (\n    <div className=\"QuoteList col-md-8 offset-md-2\">\n      <div className=\"searchbar-quotes\">\n        <Search searchFor={search} />\n      </div>\n        {quotes.length\n            ? <QuoteCardList quotes={quotes} />\n            : <p className=\"lead\">Sorry, no results were found!</p>\n        }\n      </div>\n  );\n}\n\nexport default QuoteList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport QuotableApi from \"../api/api\";\nimport QuoteCardList from \"../quotes/QuoteCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Author Detail page.\n *\n * Renders information about author, along with the quotes at that author.\n *\n * Routed at /authors/:handle\n *\n * Routes -> AuthorDetail -> QuoteCardList\n */\n\nfunction AuthorDetail() {\n  const { handle } = useParams();\n  // console.debug(\"AuthorDetail\", \"handle=\", handle);\n\n  const [author, setAuthor] = useState(null);\n\n  useEffect(function getAuthorAndQuotesForUser() {\n    async function getAuthor() {\n      setAuthor(await QuotableApi.getAuthor(handle));\n    }\n    getAuthor();\n  }, [handle]);\n\n  if (!author) return <LoadingSpinner />;\n\n  return (\n      <div className=\"AuthorDetail col-md-8 offset-md-2\">\n        <h2>{author.name}</h2>\n        <p>{author.description}</p>\n        <QuoteCardList quotes={author.quotes} />\n      </div>\n  );\n}\n\nexport default AuthorDetail;\n","import React from \"react\";\n\n/** Presentational component for showing bootstrap-style alerts.\n *\n * { LoginForm, SignupForm, ProfileForm } -> Alert\n **/\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  // console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n      <div className={`alert alert-${type}`} role=\"alert\">\n        {messages.map(error => (\n            <p className=\"mb-0 small\" key={error}>\n              {error}\n            </p>\n        ))}\n      </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport \"./LoginForm.css\";\n\n/** Login form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /authors route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // console.debug(\n  //     \"LoginForm\",\n  //     \"login=\", typeof login,\n  //     \"formData=\", formData,\n  //     \"formErrors\", formErrors,\n  // );\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /authors.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await login(formData);\n    if (result.success) {\n      history.push(\"/authors\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(l => ({ ...l, [name]: value }));\n  }\n\n  return (\n      <div className=\"LoginForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h3 className=\"login-title\">Log In</h3>\n\n          <div className=\"login-card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Username</label>\n                  <input\n                      name=\"username\"\n                      className=\"login-form-control\"\n                      value={formData.username}\n                      onChange={handleChange}\n                      autoComplete=\"username\"\n                      required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"login-form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      autoComplete=\"current-password\"\n                      required\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null}\n\n                <button\n                    className=\"login-btn\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import { useParams } from \"react-router-dom\";\nimport QuotableApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport './ProfileForm.css';\n\n/** Like Detail page.\n *\n * Renders information about like, along with the quotes at that like.\n *\n * Routed at /likes/:handle\n *\n * Routes -> LikeDetail -> QuoteCardList\n */\n\nfunction ProfileLikes() {\n  const { currentUser } = useContext(UserContext);\n  const { username } = currentUser;\n\n\n  const [likedquotes, seeLike] = useState([]);\n\n  useEffect(function getLikedQuoteAndQuotesForUser() {\n    async function getLikedQuote(username) {\n      let x = await QuotableApi.getLikedQuote(username);\n      seeLike((old) => [...old, ...x]);\n    }\n    getLikedQuote(username);\n  }, [username]);\n  \n  if (!likedquotes) return <LoadingSpinner />;\n\n    return (\n      <div>\n          <ul>\n         {likedquotes.map((likedquote) => (\n          //  <li className=\"favorite-quote\">\"{likedquote.title}\"</li>\n           <li className=\"favorite-quote\"><span role=\"img\" aria-label=\"cloud\">💭</span> \"{likedquote.title}\"</li>\n         ))}\n          </ul>\n        </div>\n  );  \n  }\n\nexport default ProfileLikes;\n\n\n","import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport ProfileLikes from \"./ProfileLikes\";\nimport QuotableApi from \"../api/api\";\nimport \"./ProfileForm.css\";\nimport UserContext from \"../auth/UserContext\";\nimport { Container, Row, Col } from \"reactstrap\";\n// import '../RandomQuote/RandomQuote.css';\n\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm({ id, title, authorName, likedquotes }) {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  // console.debug(\n  //     \"QuoteCard\",\n  //     \"ProfileForm\",\n  //     \"currentUser=\", currentUser,\n  //     \"formData=\", formData,\n  //     \"formErrors=\", formErrors,\n  //     \"saveConfirmed=\", saveConfirmed,\n  // );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await QuotableApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n\n  return (\n      <div className=\"profile-col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n        <Container>\n        <Row xs=\"2\">\n        <Col>\n        <div className=\"thoughtBubble-profile\">\n        {/* <h3 className=\"username-favorite\">{formData.firstName || formData.username}'s Favorite Quotes</h3> */}\n        <h3 className=\"username-favorite\">{currentUser.firstName || currentUser.username}'s Favorite Quotes</h3>\n          <ProfileLikes />\n        </div>\n        </Col>\n        <Col>\n        <div className=\"profile-card\">\n        <h3 className=\"profile-title\">Profile</h3>\n          <div className=\"profile-card-body\">\n            <form>\n              <div className=\"profile-form-group\">\n                <label>Username</label>\n                <p className=\"profile-form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"profile-form-group\">\n                <label>First Name</label>\n                <br/>\n                <input\n                    name=\"firstName\"\n                    className=\"profile-form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"profile-form-group\">\n                <label>Last Name</label>\n                <br/>\n                <input\n                    name=\"lastName\"\n                    className=\"profile-form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"profile-form-group\">\n                <label>Email</label>\n                <br/>\n                <input\n                    name=\"email\"\n                    className=\"profile-form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"profile-form-group\">\n                <label>Confirm password to make changes:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"profile-form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n              </div>\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"profile-btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n        </Col>\n        </Row>\n      </Container>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport \"./SignupForm.css\";\n\n/** Signup form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls signup function prop\n * - redirects to /authors route\n *\n * Routes -> SignupForm -> Alert\n * Routed as /signup\n */\n\nfunction SignupForm({ signup }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // console.debug(\n  //     \"SignupForm\",\n  //     \"signup=\", typeof signup,\n  //     \"formData=\", formData,\n  //     \"formErrors=\", formErrors,\n  // );\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /authors.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await signup(formData);\n    if (result.success) {\n      history.push(\"/authors\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"SignupForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h2 className=\"signup-title\">Sign Up</h2>\n          <div className=\"signup-card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Username</label>\n                  <input\n                      name=\"username\"\n                      className=\"signup-form-control\"\n                      value={formData.username}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"signup-form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>First name</label>\n                  <input\n                      name=\"firstName\"\n                      className=\"signup-form-control\"\n                      value={formData.firstName}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Last name</label>\n                  <input\n                      name=\"lastName\"\n                      className=\"signup-form-control\"\n                      value={formData.lastName}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                      type=\"email\"\n                      name=\"email\"\n                      className=\"signup-form-control\"\n                      value={formData.email}\n                      onChange={handleChange}\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null\n                }\n\n                <button\n                    type=\"submit\"\n                    className=\"signup-btn\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default SignupForm;","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  // console.debug(\n  //     \"PrivateRoute\",\n  //     \"exact=\", exact,\n  //     \"path=\", path,\n  //     \"currentUser=\", currentUser,\n  // );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\n// import React, { Component, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import UserContext from \"../auth/UserContext\";\nimport \"./CommunityQuoteList.css\";\n\nclass CommunityQuoteList extends Component {\n  render() {\n    // const { currentUser } = useContext(UserContext);\n    const communityquoteLinks = Object.keys(this.props.communityquotes).map(communityquoteName => (\n      <div key={communityquoteName} className=\"quotecard\" >\n        {/* {currentUser.first_name || currentUser.username} */}\n        <Link to={`/communityquotes/${communityquoteName}`}>\"{communityquoteName}\"</Link>\n      </div>\n    ));\n\n    return (\n      <div className=\"CommunityQuoteList\">\n        <header>\n          <h1 className=\"CommunityQuoteList-title\">Community Quotes</h1>\n          <button className=\"add-btn\">\n            <Link to=\"/communityquotes/new\" style={{ textDecoration: 'none', communityquote: 'black', padding: '20px' }}>Add a quote below.</Link>\n          </button>\n        </header>\n        <div className=\"CommunityQuoteList-intro\">\n          <ul style={{ textDecoration: 'none', communityquote: 'black' }}>{communityquoteLinks}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CommunityQuoteList;\n","import React, { Component } from \"react\";\nimport \"./NewCommunityQuoteForm.css\";\n\nclass NewCommunityQuoteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      hex: \"#ffffff\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.addCommunityQuote({ [this.state.name]: this.state.hex });\n    this.props.history.push(\"/communityquotes\");\n  }\n\n  render() {\n    return (\n      <div className=\"NewCommunityQuote\">\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">New Quote</label>\n            <br/>\n            <input className=\"input-field\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Enter quote and author here\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n          <input type=\"Submit\" value=\"Add quote\" readOnly />\n        </form>\n      </div>\n      \n    );\n  }\n}\n\n\nexport default NewCommunityQuoteForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CommunityQuote.css\";\n\nconst linkStyle = {\n  padding: 3,\n  textDecoration: \"none\",\n  color: 'white',\n};\nclass CommunityQuote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {chars_left: 140, max_chars: 140};\n    if (!props.hex) {\n      props.history.push(\"/communityquotes\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"thoughtBubble\">\n        <p className=\"quotetext\">{this.props.match.params.communityquote}</p>\n        </div>\n        <button className=\"goback\">\n        <p className=\"button-text\">\n          <Link to=\"/\" style={linkStyle}>Go back</Link>\n        </p>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CommunityQuote;\n\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\n\nimport CommunityQuoteList from \"../community/CommunityQuoteList\";\nimport NewCommunityQuoteForm from \"../community/NewCommunityQuoteForm\";\nimport CommunityQuote from \"../community/CommunityQuote\";\n\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      communityquotes: JSON.parse(localStorage.getItem(\"communityquotes\")) || {\n        \"Don't cry because it's over. Smile because it happened. -Dr. Seuss\": \"#FF0000\",\n        \"If anything is worth doing, do it with all your heart. -Buddha\": \"#00FF00\",\n        \"In the end, it's not the years in your life that count. It's the life in your years. --Abraham Lincoln\": \"#0000FF\"\n        // red: \"#FF0000\",\n        // blue: \"#00FF00\",\n        // green: \"#0000FF\"\n      }\n    };\n\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd(newCommunityQuote) {\n    this.setState(prevState => ({\n      communityquotes: { ...newCommunityQuote, ...prevState.communityquotes }\n    }), () => {\n      // third param to setState is fn-to-run-when-done\n      localStorage.setItem(\"communityquotes\", JSON.stringify(this.state.communityquotes))\n    });\n  }\n\n  render() {\n    const communityquoteListWithCommunityQuotes = () => <CommunityQuoteList communityquotes={this.state.communityquotes} />;\n\n    const newCommunityQuoteWithHandler = props => (\n      <NewCommunityQuoteForm addCommunityQuote={this.handleAdd} {...props} />\n    );\n\n    const currentCommunityQuote = props => {\n      const communityquoteName = props.match.params.communityquote;\n      const hex = this.state.communityquotes[communityquoteName];\n      return <CommunityQuote {...props} hex={hex} />;\n    };\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/communityquotes\" render={communityquoteListWithCommunityQuotes} />\n          <Route exact path=\"/communityquotes/new\" render={newCommunityQuoteWithHandler} />\n          <Route path=\"/communityquotes/:communityquote\" render={currentCommunityQuote} />\n          <Redirect to=\"/communityquotes\" />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport '../RandomQuote/RandomQuote.css';\n// import moment from 'moment';\n\nconst QuoteOfTheDay = () => {\n  const data = useFetch(\"https://quotes.rest/qod\");\n  if (data.isLoading) {\n    return <div>Loading...</div>;\n  }\n  if (data.error) {\n    return <div>Sorry, something went wrong :(</div>\n    }\n    \n    const quote = data.response;\n\n    \n    const title = quote.contents.quotes[0].title;\n    const quoteOfTheDay = quote.contents.quotes[0].quote;\n    const author = quote.contents.quotes[0].author;\n    const date = quote.contents.quotes[0].date;\n\n    const source = quote.contents.quotes[0].permalink;\n    \n    // var x = changeDate(date);\n    // function changeDate(x){\n    //   let currentDate = new Date(date);\n    //   var fd = currentDate.toDateString();\n    //   return fd;\n    // }\n    \n  \n  // https://momentjs.com/\n\n  return (\n    <div className=\"App\">\n          <h1><span role=\"img\" aria-label=\"calendar\">📅</span>{title}</h1>\n          <h4>for {date}</h4>\n          {/* <h4>for {x}</h4> */}\n        <div className=\"thoughtBubble\">\n            <p>\"{quoteOfTheDay}\"</p>\n            <p>by {author}</p>\n        </div>\n        <form action={source} target=\"_blank\">\n          <input className=\"source-btn\" type=\"submit\" value=\"read more about this quote at They Said So® ➡️\" />\n        </form>\n      </div>\n  );\n};\n\nexport default QuoteOfTheDay;\n\n\n","import React from \"react\";\nimport './About.css';\nimport headshot from './headshot.png';\n\nconst About = () => {\n\n  return (\n    <div className=\"App\">\n        <h1 className=\"about-title\">\n        <span role=\"img\" aria-label=\"tech\">👩🏻‍💻</span>About<img src={headshot} alt=\"headshot\" className=\"headshot\" />\n        </h1>\n        <div className=\"thoughtBubble-about\">\n        <div className=\"about-paragraph\">\n        <p>\n            Quotable is my final of two capstone projects I developed with Springboard's Software Engineering Bootcamp. \n            Built with PostgreSQL, Express.js, React, Node.js and deployed with Heroku, it's meant to browse famous quotes, add favorite quotes, search for certain quotes and authors, \n            and even post your own quotes.\n        </p>\n        <p>\n            Quotable's API:\n            {/* <form action=\"https://goquotes.docs.apiary.io/#\" target=\"_blank\">\n                <input className=\"about-btn\" type=\"submit\" value=\"Go Quotes API ➡️\" />\n            </form> */}\n            {/* <form action=\"https://zenquotes.io/\" target=\"_blank\">\n                <input className=\"about-btn\" type=\"submit\" value=\"Zen Quotes API ➡️\" />\n            </form> */}\n            {/* <form action=\"https://opensourcelibs.com/lib/quotable#list-quotes\" target=\"_blank\">\n                <input className=\"about-btn\" type=\"submit\" value=\"Quotable API ➡️\" />\n            </form> */}\n            <form action=\"https://theysaidso.com/#\" target=\"_blank\">\n                <input className=\"about-btn\" type=\"submit\" value=\"They Said So® API ➡️\" />\n            </form>\n        </p>\n        </div>\n        </div>\n        <div className=\"thoughtBubble-viewmore\">\n        <h3 className=\"about-me\">\n        View more about me:\n        </h3>\n        <form action=\"https://www.linkedin.com/in/ashleyndragan/\" target=\"_blank\">\n          <input className=\"about-btn\" type=\"submit\" value=\"LinkedIn ➡️\" />\n        </form>\n        <form action=\"http://picslink.herokuapp.com/\" target=\"_blank\">\n          <input className=\"about-btn\" type=\"submit\" value=\"My first Capstone ➡️\" />\n        </form>\n        <form action=\"https://www.springboard.com/courses/software-engineering-career-track/\" target=\"_blank\">\n          <input className=\"about-btn\" type=\"submit\" value=\"Springboard ➡️\" />\n        </form>\n      </div>\n        </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"../homepage/Homepage\";\nimport AuthorList from \"../authors/AuthorList\";\nimport QuoteList from \"../quotes/QuoteList\";\nimport AuthorDetail from \"../authors/AuthorDetail\";\nimport LoginForm from \"../auth/LoginForm\";\nimport ProfileForm from \"../profiles/ProfileForm\";\nimport SignupForm from \"../auth/SignupForm\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport CommunityQuotesRoutes from \"./CommunityQuotesRoutes\";\nimport QuoteOfTheDay from \"../QOTD/QuoteOfTheDay\";\nimport About from \"../about/About\";\nimport MainQuoteList from \"../mainquotelist/MainQuoteList\";\n\n/** Site-wide routes.\n *\n * Parts of site should only be visitable when logged in. Those routes are\n * wrapped by <PrivateRoute>, which is an authorization component.\n *\n * Visiting a non-existant route redirects to the homepage.\n */\n\nfunction Routes({ login, signup }) {\n  // console.debug(\n  //     \"Routes\",\n  //     `login=${typeof login}`,\n  //     `register=${typeof register}`,\n  // );\n\n  return (\n      <div className=\"pt-5\">\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <LoginForm login={login} />\n          </Route>\n\n          <Route exact path=\"/signup\">\n            <SignupForm signup={signup} />\n          </Route>\n\n          <Route exact path=\"/quoteoftheday\">\n            <QuoteOfTheDay />\n          </Route>\n\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n\n          <PrivateRoute exact path=\"/famousauthors\">\n            <AuthorList />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/famousquotes\">\n            <QuoteList />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/quoteoftheday\">\n            <QuoteOfTheDay />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/authors/:handle\">\n            <AuthorDetail />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/mainquotelist\">\n            <MainQuoteList />\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/profile\">\n            <ProfileForm />\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/communityquotes\">\n            <CommunityQuotesRoutes />\n          </PrivateRoute>\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n  );\n}\n\nexport default Routes;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport QuotableApi from \"./api/api\";\nimport UserContext from \"./auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport \"./App.css\";\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = \"quotable-token\";\n\n/** Quotable app.\n *\n * - infoLoaded: has user data been pulled from API?\n *   (this manages spinner for \"loading...\")\n *\n * - currentUser: user obj from API. This becomes the canonical way to tell\n *   if someone is logged in. This is passed around via context throughout app.\n *\n * - token: for logged in users, this is their authentication JWT.\n *   Is required to be set for most API calls. This is initially read from\n *   localStorage and synced to there via the useLocalStorage hook.\n *\n * App -> Routes\n */\n\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [likeIds, setLikeIds] = useState(new Set([]));\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  // console.debug(\n  //     \"App\",\n  //     \"infoLoaded=\", infoLoaded,\n  //     \"currentUser=\", currentUser,\n  //     \"token=\", token,\n  // );\n\n  // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    // console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          // put the token on the Api class so it can use it to call the API.\n          QuotableApi.token = token;\n          let currentUser = await QuotableApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          setLikeIds(new Set(currentUser.likes));\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n\n    // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  /** Handles site-wide logout. */\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  /** Handles site-wide signup.\n   *\n   * Automatically logs them in (set token) upon signup.\n   *\n   * Make sure you await this function and check its return value!\n   */\n  async function signup(signupData) {\n    try {\n      let token = await QuotableApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  /** Handles site-wide login.\n   *\n   * Make sure you await this function and check its return value!\n   */\n  async function login(loginData) {\n    try {\n      let token = await QuotableApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  /** Checks if a quote has been liked. */\n  function hasLikedAQuote(id) {\n    return likeIds.has(id);\n  }\n\n  /** Like a quote: make API call and update set of like IDs. */\n  function LikedQuote(id) {\n    if (hasLikedAQuote(id)) return;\n    QuotableApi.LikedQuote(currentUser.username, id);\n    setLikeIds(new Set([...likeIds, id]));\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n      <BrowserRouter>\n        <UserContext.Provider\n            value={{ currentUser, setCurrentUser, hasLikedAQuote, LikedQuote }}>\n          <div className=\"App\">\n            <Navigation logout={logout} />\n            <Routes login={login} signup={signup} />\n          </div>\n        </UserContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\",\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}